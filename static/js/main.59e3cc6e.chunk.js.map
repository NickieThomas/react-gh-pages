{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","j","val","indexOf","this","squares","key","boardCol","col","bod","push","renderSquare","highlight","row","boardRow","React","Component","Game","state","history","Array","fill","last","stepNumber","xIsNext","isAsc","slice","length","calculateWinner","setState","concat","step","status","current","winner","lastMove","Math","floor","movesAsc","map","move","arr","desc","jumpTo","movesDesc","handleClick","handleSortToggle","srt","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59e3cc6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i,j) {\r\n\tconst val = (j && j.indexOf(i) !== -1)?<mark>{this.props.squares[i]}</mark>:this.props.squares[i];\r\n\t\r\n\treturn (\r\n      <Square\r\n        value= {val}\r\n        onClick={() => this.props.onClick(i)}\r\n        key={i}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const boardCol = ((col) => {\r\n      const bod = [];\r\n      for(let i=col*3;i<col*3+3;i++){\r\n        bod.push(this.renderSquare(i,this.props.highlight));\r\n      }\r\n      return (\r\n        <div className=\"board-row\" key={col}>\r\n          {bod}\r\n        </div>\r\n      );\r\n    });\r\n    \r\n    const boardRow = (()=>{\r\n      const row = [];\r\n      for(let i=0;i<3;i++){\r\n        row.push(boardCol(i));\r\n      }\r\n      return(row);\r\n    });\r\n    \r\n    return (\r\n      <div>{boardRow()}</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          last: -1,\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      isAsc: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if ((calculateWinner(squares) && calculateWinner(squares).length > 0) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          last: i,\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  \r\n  handleSortToggle(){\r\n    this.setState({\r\n      isAsc:!this.state.isAsc,\r\n    })\r\n    return;\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history.slice(0, this.state.history.length + 1);\r\n    const current = history[this.state.stepNumber];\r\n    const winner = (calculateWinner(current.squares))?calculateWinner(current.squares)[0]:null;\r\n    const highlight = (calculateWinner(current.squares))?calculateWinner(current.squares):null;\r\n    const lastMove = ((i) => {\r\n      const row = i%3;\r\n      const col = Math.floor(i/3);\r\n      if(i===-1){\r\n        return \"\";\r\n      }\r\n      return(\r\n        '('+row+','+col+')'\r\n      );\r\n    });\r\n\r\n    const movesAsc = history.map((step, move, arr) => {\r\n      let desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      if(move === this.state.stepNumber){\r\n        desc = <b>{desc}</b>;\r\n      }\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>{lastMove(history[move].last)}\r\n        </li>\r\n      );\r\n    });\r\n    const movesDesc = history.map((step, move) => {\r\n      let desc = (history.length-1!== move) ?\r\n        'Go to move #' + (history.length-1-move ):\r\n        'Go to game start';\r\n      if((history.length-1-move ) === this.state.stepNumber){\r\n        desc = <b>{desc}</b>;\r\n      }\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo((history.length-1-move ))}>{desc}</button>{lastMove(history[(history.length-1-move )].last)}\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    const srt = (() => {\r\n      const val = (this.state.isAsc)?\"asc\":\"desc\";\r\n      return (\r\n        <button onClick={() => this.handleSortToggle()}>{val}</button>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner !== null) {\r\n      status = \"Winner: \" + current.squares[winner];\r\n    } else {\r\n    if(this.state.stepNumber !== 9)\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    else\r\n      status = \"Draw!\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n            highlight={highlight}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{srt()}</div>\r\n          <div>{status}</div>\r\n          <ol>{(this.state.isAsc)?movesAsc:movesDesc}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return lines[i];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n"],"sourceRoot":""}